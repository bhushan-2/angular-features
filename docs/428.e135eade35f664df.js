"use strict";(self.webpackChunkangular_versions=self.webpackChunkangular_versions||[]).push([[428],{7428:(g,p,i)=>{i.r(p),i.d(p,{Angular14Module:()=>n});var m=i(6895),l=i(3329),e=i(4650);const u=function(){return["/"]};class r{constructor(){this.standalone="\n  import { Component } from '@angular/core';\n  import { CommonModule } from '@angular/common'; // includes NgIf and TitleCasePipe\n  import { bootstrapApplication } from '@angular/platform-browser';\n\n  import { MatCardModule } from '@angular/material/card';\n  import { ImageComponent } from './app/image.component';\n  import { HighlightDirective } from './app/highlight.directive';\n\n  @Component({\n    selector: 'app-root',\n    standalone: true,\n    imports: [\n      ImageComponent, HighlightDirective, // import standalone Components, Directives and Pipes\n      CommonModule, MatCardModule // and NgModules\n    ],\n    template: '\n      <mat-card *ngIf=\"url\">\n        <app-image-component [url]=\"url\"></app-image-component>\n        <h2 app-highlight>{{name | titlecase}}</h2>\n      </mat-card>\n    '\n  })\n  export class ExampleStandaloneComponent {\n    name = \"emma\";\n    url = \"www.emma.org/image\";\n  }\n\n  // Bootstrap a new Angular application using our ExampleStandaloneComponent as a root component.\n  bootstrapApplication(ExampleStandaloneComponent);",this.pageTitle="\n    const routes: Routes = [{\n      path: 'home',\n      component: HomeComponent\n      title: 'My App - Home'  // <-- Page title\n    }, {\n      path: 'about',\n      component: AboutComponent,\n      title: 'My App - About Me'  // <-- Page title\n    }];"}}r.\u0275fac=function(t){return new(t||r)},r.\u0275cmp=e.Xpm({type:r,selectors:[["app-angular14"]],decls:45,vars:4,consts:[[1,"container-fluid"],[1,"row"],[1,"col-md-12","pd-0"],[1,"angular-14"],[1,"back",3,"routerLink"],[1,"row","features-scroll"],[1,"col-md-12"],[1,"feature"],[1,"terminal"],["width","700","height","395","loading","lazy","src","https://miro.medium.com/max/1050/0*NhMwPjtNJ7aGgsf9","alt","typed forms"],["width","700","height","395","loading","lazy","src","https://miro.medium.com/max/900/0*zJhvlTPZxwmyHvul","alt","typed forms"]],template:function(t,s){1&t&&(e.TgZ(0,"div",0)(1,"div",1)(2,"div",2)(3,"div",3)(4,"label"),e._uU(5,"Angular 14 Features"),e.qZA(),e.TgZ(6,"div"),e._uU(7,"(Released on June 2022)"),e.qZA(),e.TgZ(8,"div",4),e._uU(9," < Back"),e.qZA()()()(),e.TgZ(10,"div",5)(11,"div",6)(12,"div",7)(13,"label"),e._uU(14,"1. Standalone Components"),e.qZA(),e.TgZ(15,"p"),e._uU(16," Angular standalone components aim to streamline the authoring of Angular applications by reducing the need for NgModules. In v14, standalone components are in developer preview. They are ready to be used in your applications for exploration and development, but are not a stable API and will potentially change outside our typical model of backwards compatibility. "),e.qZA(),e.TgZ(17,"div",8)(18,"pre"),e._uU(19,"ng generate component --standalone"),e.qZA()(),e.TgZ(20,"div",8)(21,"pre"),e._uU(22),e.qZA()()(),e.TgZ(23,"div",7)(24,"label"),e._uU(25,"2. Typed Angular Forms"),e.qZA(),e.TgZ(26,"p"),e._uU(27," Typed forms ensure that the values inside of form controls, groups, and arrays are type safe across the entire API surface. This enables safer forms, especially for deeply nested complex cases. "),e.qZA(),e.TgZ(28,"div"),e._UZ(29,"img",9),e.qZA()(),e.TgZ(30,"div",7)(31,"label"),e._uU(32,"3. Streamlined page title accessibility"),e.qZA(),e.TgZ(33,"p"),e._uU(34," When designing and developing applications, your page title displays the content of your page in a different way. While talking about Angular 13, adding titles was streamlined with the new Route.title in the Angular router. However, it doesn\u2019t require adding any additional imports when adding a title to your page in Angular 14. "),e.qZA(),e.TgZ(35,"div",8)(36,"pre"),e._uU(37),e.qZA()()(),e.TgZ(38,"div",7)(39,"label"),e._uU(40,"4. Extended Developer Diagnostics"),e.qZA(),e.TgZ(41,"p"),e._uU(42," New extended diagnostics provide an extendable framework that gives you more insight into your templates and how you might be able to improve them. Diagnostics give compile-time warnings with precise, actionable suggestions for your templates, catching bugs before run-time. "),e.qZA(),e.TgZ(43,"div"),e._UZ(44,"img",10),e.qZA()()()()()),2&t&&(e.xp6(8),e.Q6J("routerLink",e.DdM(3,u)),e.xp6(14),e.Oqu(s.standalone),e.xp6(15),e.Oqu(s.pageTitle))},dependencies:[l.rH],styles:[".angular-14[_ngcontent-%COMP%]{width:100%;padding:10px;background:#1976d2}.angular-14[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:16px;font-weight:600;color:#fff;margin-left:20px}.angular-14[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{font-size:12px;font-weight:400;color:#ccc;display:inline-block;margin-left:10px}"]});const d=[{path:"",component:r}];class o{}o.\u0275fac=function(t){return new(t||o)},o.\u0275mod=e.oAB({type:o}),o.\u0275inj=e.cJS({imports:[l.Bz.forChild(d),l.Bz]});class n{}n.\u0275fac=function(t){return new(t||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[m.ez,o]})}}]);